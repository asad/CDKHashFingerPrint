This is an attempt to improve the CDK HashFingerprint (Fingerprinter class).
The idea behind the improved version is borrowed from my blog improvised hashing function and their impact on the fingerprints. 

http://chembioinfo.com/2011/10/30/revisiting-molecular-hashed-fingerprints/

Compile with dependecies

```
mvn clean compile assembly:single
```
Command line interface

/*  Test improved CDK FP */

```
java -jar target/fingerprinter-1.0-SNAPSHOT-jar-with-dependencies.jar /Users/asad/github/rhea/mol scaffold 2000
```    
***************************************
Improved CDK HashedFingerprinter class with 1024 size FP
***************************************
------------------------------------------------------------------------------
CASES:		TP:	FP:	TN:	FN:	ACCURACY:	TPR:	FPR:	Time (mins):
------------------------------------------------------------------------------
120*120		124	84	14082	110	0.987		0.530	0.006	0.01
240*240		254	197	56827	322	0.991		0.441	0.004	0.03
360*360		383	419	127900	898	0.990		0.299	0.004	0.06
480*480		508	758	227440	1694	0.990		0.231	0.004	0.11
600*600		647	1156	355566	2631	0.990		0.198	0.004	0.16
720*720		775	1613	511936	4076	0.990		0.160	0.004	0.24
840*840		939	2284	695951	6426	0.988		0.128	0.004	0.32
960*960		1114	3170	909009	8307	0.988		0.119	0.004	0.43

/* Test CDK default FP */
 
```
java -jar target/fingerprinter-1.0-SNAPSHOT-jar-with-dependencies.jar /Users/asad/github/rhea/mol cdk 2000
```
***************************************
CDK Default Fingerprinter class with 1024 size FP
***************************************
------------------------------------------------------------------------------
CASES:		TP:	FP:	TN:	FN:	ACCURACY:	TPR:	FPR:	Time (mins):
------------------------------------------------------------------------------
120*120		124	330	13836	110	0.970		0.530	0.024	0.01
240*240		254	1136	55888	322	0.975		0.441	0.020	0.03
360*360		384	2595	125724	897	0.974		0.300	0.021	0.06
480*480		511	4817	223381	1691	0.972		0.233	0.022	0.1
600*600		651	7341	349381	2627	0.973		0.199	0.021	0.16
720*720		780	10472	503077	4071	0.972		0.161	0.021	0.23
840*840		944	15018	683217	6421	0.970		0.129	0.022	0.32
960*960		1119	19360	892819	8302	0.970		0.119	0.022	0.41



Results:

The improved hashed fingerprinter has better "Accuracy" 
and ~30-40% lesser false positives (FPs) than the original version!

/* Test new FP with ring matcher */

java -jar BenchmarkHashedFingerprinter.jar test/data/mol hash  1  2000

------------------------------------------------------------------------------
CASES:		TP:	FP:	TN:	FN:	ACCURACY:   TPR:    FPR:	Time (mins): 
------------------------------------------------------------------------------
200*200		629	144	39227	0	0.996       1.000   0.004	0.1
400*400		2381	842	156777	0	0.995       1.000   0.005	0.34
600*600		4882	2161	352957	0	0.994       1.000   0.006	0.71
800*800		8484	4477	627039	0	0.993       1.000   0.007	1.2
1000*1000	12710	7977	979313	0	0.992       1.000   0.008	1.97
1200*1200	17070	11429	1411501	0	0.992       1.000   0.008	2.82

The improved hashed fingerprinter with ring matcher has better "Accuracy" 
and ~40% lesser false positives (FPs) than the original version!

/* Test new FP with bloom filter and ring matcher */

java -jar BenchmarkHashedFingerprinter.jar test/data/mol hashbloom  1  2000

